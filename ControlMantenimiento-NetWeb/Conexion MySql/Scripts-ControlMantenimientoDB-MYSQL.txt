--Si deseas realizar sugerencias o tienes algún problema con este fuente, no dudes en escribirme a: correal_95@hotmail.com 

CREATE DATABASE CONTROLMANTENIMIENTODB;

CREATE TABLE `equipos` (
  `CODIGOEQUIPO` int(4) NOT NULL AUTO_INCREMENT,
  `NOMBREEQUIPO` varchar(50) NOT NULL,
  `CODIGOMARCA` int(4) NOT NULL,
  `SERIE` varchar(20) NOT NULL,
  `CODIGOLINEA` int(4) NOT NULL,
  `LUBRICACION` int(1) DEFAULT NULL,
  `INGRESADOPOR` decimal(10,0) NOT NULL,
  `MODIFICADOPOR` decimal(10,0) NOT NULL,
  `FECHAINGRESO` datetime NOT NULL,
  `FECHAMODIFICACION` datetime NOT NULL,
  PRIMARY KEY (`CODIGOEQUIPO`),
  UNIQUE KEY `SERIE` (`SERIE`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=latin1;


CREATE TABLE `operarios` (
  `DOCUMENTO` decimal(10,0) NOT NULL,
  `NOMBRES` varchar(25) NOT NULL,
  `APELLIDOS` varchar(25) NOT NULL,
  `TELEFONO` decimal(10,0) NOT NULL,
  `CORREO` varchar(50) DEFAULT NULL,
  `CLAVE` varchar(20) NOT NULL,
  `PERFIL` int(1) NOT NULL,
  `FOTO` varchar(50) DEFAULT NULL,
  `INGRESADOPOR` decimal(10,0) NOT NULL,
  `MODIFICADOPOR` decimal(10,0) NOT NULL,
  `FECHAINGRESO` datetime NOT NULL,
  `FECHAMODIFICACION` datetime NOT NULL,
  PRIMARY KEY (`DOCUMENTO`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE `mantenimiento` (
  `CODIGOEQUIPO` int(4) NOT NULL,
  `DOCUMENTO` decimal(10,0) NOT NULL,
  `FECHA` date NOT NULL,
  `OBSERVACIONES` varchar(255) DEFAULT NULL,
  `INGRESADOPOR` decimal(10,0) NOT NULL,
  `MODIFICADOPOR` decimal(10,0) NOT NULL,
  `FECHAINGRESO` datetime NOT NULL,
  `FECHAMODIFICACION` datetime NOT NULL,
  PRIMARY KEY (`CODIGOEQUIPO`),
  UNIQUE KEY `DOCUMENTO` (`DOCUMENTO`,`FECHA`),
  CONSTRAINT `FK_CODIGOEQUIPO` FOREIGN KEY (`CODIGOEQUIPO`) REFERENCES `equipos` (`CODIGOEQUIPO`),
  CONSTRAINT `FK_DOCUMENTO` FOREIGN KEY (`DOCUMENTO`) REFERENCES `operarios` (`DOCUMENTO`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


CREATE TABLE `respaldo` (
  `CODIGOEQUIPO` int(4) NOT NULL,
  `DOCUMENTO` decimal(10,0) NOT NULL,
  `FECHA` date NOT NULL,
  `OBSERVACIONES` varchar(255) DEFAULT NULL,
  `INGRESADOPOR` decimal(10,0) NOT NULL,
  `MODIFICADOPOR` decimal(10,0) NOT NULL,
  `FECHAINGRESO` datetime NOT NULL,
  `FECHAMODIFICACION` datetime NOT NULL);

CREATE TABLE `listavalores` (
  `CODIGO` int(4) NOT NULL AUTO_INCREMENT,
  `NOMBRE` varchar(50) NOT NULL,
  `DESCRIPCION` varchar(255) DEFAULT NULL,
  `TIPO` varchar(50) NOT NULL,
  `INGRESADOPOR` decimal(10,0) NOT NULL,
  `MODIFICADOPOR` decimal(10,0) NOT NULL,
  `FECHAINGRESO` datetime NOT NULL,
  `FECHAMODIFICACION` datetime NOT NULL,
  PRIMARY KEY (`CODIGO`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `clineas` AS select `listavalores`.`CODIGO` AS `CODIGO`,`listavalores`.`NOMBRE` AS `NOMBRE` from `listavalores` where (`listavalores`.`TIPO` = 'LINEAS') order by `listavalores`.`CODIGO`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `clubricacion` AS select `equipos`.`CODIGOEQUIPO` AS `CODIGOEQUIPO`,`equipos`.`NOMBREEQUIPO` AS `NOMBREEQUIPO`,`equipos`.`SERIE` AS `SERIE` from `equipos` where (`equipos`.`LUBRICACION` = 1);

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `cmarcas` AS select `listavalores`.`CODIGO` AS `CODIGO`,`listavalores`.`NOMBRE` AS `NOMBRE` from `listavalores` where (`listavalores`.`TIPO` = 'MARCAS') order by `listavalores`.`CODIGO`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `cprogramacion` AS select `e`.`CODIGOEQUIPO` AS `CODIGOEQUIPO`,`e`.`NOMBREEQUIPO` AS `NOMBREEQUIPO`,`e`.`SERIE` AS `SERIE` from (`mantenimiento` `m` join `equipos` `e`) where (`m`.`CODIGOEQUIPO` = `e`.`CODIGOEQUIPO`);

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `cprogramarequipos` AS select `equipos`.`CODIGOEQUIPO` AS `CODIGOEQUIPO`,`equipos`.`NOMBREEQUIPO` AS `NOMBREEQUIPO`,`equipos`.`SERIE` AS `SERIE` from `equipos` where ((not(exists(select `mantenimiento`.`CODIGOEQUIPO` AS `CODIGOEQUIPO` from `mantenimiento` where (`equipos`.`CODIGOEQUIPO` = `mantenimiento`.`CODIGOEQUIPO`)))) and (`equipos`.`LUBRICACION` = 1));


CREATE PROCEDURE controlmantenimientodb.`spr_CBuscarRegistro`(
IN p_TABLA      VARCHAR(50),
IN p_DATOBUSCAR VARCHAR(50), 
IN p_CONDICION  VARCHAR(50))
BEGIN
       IF (p_TABLA = 'OPERARIOS') THEN
          IF (p_CONDICION <> '') THEN
                SELECT * FROM OPERARIOS WHERE DOCUMENTO = p_DATOBUSCAR AND CLAVE = p_CONDICION;
          ELSE
              SELECT * FROM OPERARIOS WHERE DOCUMENTO = p_DATOBUSCAR;
          END IF;   
       ELSEIF (p_TABLA = 'LISTAVALORES') THEN
               SELECT * FROM LISTAVALORES WHERE CODIGO = p_DATOBUSCAR;                   
       ELSEIF (p_TABLA = 'MANTENIMIENTO') THEN
               SELECT * FROM MANTENIMIENTO WHERE CODIGOEQUIPO = p_DATOBUSCAR;             
       ELSEIF (p_TABLA = 'EQUIPOS') THEN                           
               SELECT * FROM EQUIPOS WHERE CODIGOEQUIPO = p_DATOBUSCAR;                                 
       ELSEIF (p_TABLA = 'CPROGRAMAREQUIPOS') THEN
               SELECT * FROM  CPROGRAMAREQUIPOS;
       ELSEIF (p_TABLA = 'CPROGRAMACION') THEN
             SELECT * FROM  CPROGRAMACION;      
       ELSEIF (p_TABLA = 'CLINEAS') THEN
             SELECT * FROM  CLineas;
       ELSEIF (p_TABLA = 'CMARCAS') THEN
             SELECT * FROM  CMarcas;       
       END IF;
END;

CREATE PROCEDURE controlmantenimientodb.`spr_CCargarCombosListas`(
  IN  p_TABLA  VARCHAR(30)
)
BEGIN
      IF(p_TABLA = 'OPERARIOS') THEN
         SELECT DOCUMENTO, CONCAT(NOMBRES, " ", APELLIDOS) AS NOMBRECOMPLETO FROM OPERARIOS;         

      ELSEIF (p_TABLA = 'EQUIPOS') THEN             
              SELECT CODIGOEQUIPO, NOMBREEQUIPO FROM EQUIPOS
              WHERE  (NOT EXISTS
                          (SELECT     CODIGOEQUIPO
                            FROM       MANTENIMIENTO
                            WHERE     (EQUIPOS.CODIGOEQUIPO = CODIGOEQUIPO)));

      ELSEIF (p_TABLA = 'CLINEAS') THEN             
              SELECT CODIGO, NOMBRE FROM CLINEAS;    
      ELSEIF (p_TABLA = 'CMARCAS') THEN             
              SELECT CODIGO, NOMBRE FROM CMARCAS;
      ELSEIF (p_TABLA = 'CPROGRAMACION') THEN             
              SELECT CODIGOEQUIPO, CONCAT(NOMBREEQUIPO, " ", SERIE) AS EQUIPO FROM CPROGRAMACION;
      ELSEIF (p_TABLA = 'CPROGRAMAREQUIPOS') THEN             
              SELECT CODIGOEQUIPO, CONCAT(NOMBREEQUIPO, " ", SERIE) AS EQUIPO FROM CPROGRAMAREQUIPOS;
      ELSEIF (p_TABLA = 'CONTROLPROGRAMACION') THEN
              SELECT CODIGOEQUIPO, CONCAT(NOMBREEQUIPO, " ", SERIE) AS EQUIPO, 'EQUIPOS' AS TIPO FROM CPROGRAMACION
              UNION ALL(
              SELECT DOCUMENTO, CONCAT(NOMBRES, " ", APELLIDOS) AS NOMBRECOMPLETO, 'OPERARIOS' FROM OPERARIOS)
              ORDER BY TIPO;
      ELSEIF (p_TABLA = 'CONTROLPROGRAMAREQUIPOS') THEN 
              SELECT CODIGOEQUIPO, CONCAT(NOMBREEQUIPO, " ", SERIE) AS EQUIPO, 'EQUIPOS' AS TIPO FROM CPROGRAMAREQUIPOS
              UNION ALL(
              SELECT DOCUMENTO, CONCAT(NOMBRES, " ", APELLIDOS) AS NOMBRECOMPLETO, 'OPERARIOS' FROM OPERARIOS)
              ORDER BY TIPO;
      ELSEIF (p_TABLA = 'CONTROLEQUIPOS') THEN                   
              SELECT  CODIGO, NOMBRE, TIPO
              FROM LISTAVALORES
              UNION ALL(
              SELECT CODIGOEQUIPO, NOMBREEQUIPO, 'EQUIPOS' FROM EQUIPOS
              WHERE NOT EXISTS
                              (SELECT CODIGOEQUIPO
                               FROM   MANTENIMIENTO
                               WHERE  (EQUIPOS.CODIGOEQUIPO = CODIGOEQUIPO)))
              ORDER BY TIPO;                          
      END IF;     
END;

CREATE PROCEDURE controlmantenimientodb.`spr_CValidarExistenciaDatos`(
IN p_TABLA      VARCHAR(50),
OUT p_RESULTADO NUMERIC(8))
BEGIN
     IF (p_TABLA = 'OPERARIOS') THEN
          SELECT COUNT(*) INTO p_RESULTADO FROM OPERARIOS;
     ELSEIF (p_TABLA = 'EQUIPOS') THEN     
            SELECT COUNT(*) INTO p_RESULTADO FROM EQUIPOS
              WHERE  (NOT EXISTS
                          (SELECT     CODIGOEQUIPO
                            FROM       MANTENIMIENTO
                            WHERE     (EQUIPOS.CODIGOEQUIPO = CODIGOEQUIPO)));

     ELSEIF (p_TABLA = 'CLINEAS') THEN
            SELECT COUNT(*) INTO p_RESULTADO FROM CLINEAS;
     ELSEIF (p_TABLA = 'CMARCAS') THEN
             BEGIN
                  SELECT COUNT(*) INTO p_RESULTADO FROM LISTAVALORES WHERE TIPO = 'MARCAS';
                  IF (p_RESULTADO = 0)  THEN
                      SET p_RESULTADO = -1;
                  ELSE
                      SELECT COUNT(*) INTO p_RESULTADO FROM LISTAVALORES WHERE TIPO = 'LINEAS';
                      IF (p_RESULTADO = 0)  THEN
                          SET p_RESULTADO = -2;
                      END IF;
                  END IF;    
            END;
     ELSEIF (p_TABLA = 'CPROGRAMAREQUIPOS')  THEN
             BEGIN
                  SELECT COUNT(*) INTO p_RESULTADO FROM CPROGRAMAREQUIPOS;
                  IF (p_RESULTADO = 0)  THEN
                      SET p_RESULTADO = -1;
                  ELSE
                      SELECT COUNT(*) INTO p_RESULTADO FROM OPERARIOS;
                      IF (p_RESULTADO = 0)  THEN
                          SET p_RESULTADO = -2;
                      END IF;
                  END IF;    
             END;     
     ELSEIF (p_TABLA = 'CPROGRAMACION') THEN 
            SELECT COUNT(*) INTO p_RESULTADO FROM CPROGRAMACION;
     ELSEIF (p_TABLA = 'RESPALDO') THEN
            SELECT COUNT(*) INTO p_RESULTADO FROM RESPALDO;
      ELSEIF (p_TABLA = 'LINEAS') THEN
            SELECT COUNT(*) INTO p_RESULTADO FROM LISTAVALORES WHERE TIPO = 'LINEAS';
     ELSEIF (p_TABLA = 'MARCAS') THEN
            SELECT COUNT(*) INTO p_RESULTADO FROM LISTAVALORES WHERE TIPO = 'MARCAS';           
     END IF;
END;

CREATE PROCEDURE controlmantenimientodb.`spr_DRegistro`(
 IN  p_TABLA        VARCHAR(20),
 IN  p_CONDICION    VARCHAR(50),
 OUT p_RESULTADO    INT(1))
BEGIN
      DECLARE v_DatoExiste varchar(50) DEFAULT NULL;
      DECLARE CURVACIO	 INT DEFAULT 0;

      DECLARE Cur_Mantenimiento1 CURSOR FOR
      SELECT DOCUMENTO
      FROM   MANTENIMIENTO
      WHERE  DOCUMENTO  = p_CONDICION LIMIT 1;
      
      DECLARE Cur_Mantenimiento2 CURSOR FOR
      SELECT DOCUMENTO
      FROM   MANTENIMIENTO
      WHERE  CODIGOEQUIPO  = p_CONDICION;
      
      DECLARE Cur_Equipos1 CURSOR FOR
      SELECT CODIGOLINEA
      FROM   EQUIPOS
      WHERE  CODIGOLINEA  = p_CONDICION LIMIT 1;
      
      DECLARE Cur_Equipos2 CURSOR FOR
      SELECT CODIGOMARCA
      FROM   EQUIPOS
      WHERE  CODIGOMARCA  = p_CONDICION LIMIT 1;

      DECLARE CONTINUE HANDLER FOR NOT FOUND SET CURVACIO = 1;
      DECLARE EXIT HANDLER FOR SQLEXCEPTION SET p_RESULTADO = 2;
     
      SET p_RESULTADO = 0;

      IF(p_TABLA = 'OPERARIOS') THEN
         SET CURVACIO = 0;
	       OPEN Cur_Mantenimiento1;
		     FETCH Cur_Mantenimiento1 INTO v_DatoExiste;
		     CLOSE Cur_Mantenimiento1;
         IF (v_DatoExiste IS NOT NULL) THEN
             SET p_RESULTADO = 1;
         ELSE
             DELETE FROM OPERARIOS WHERE DOCUMENTO = p_CONDICION;
         END IF;		 
      ELSEIF (p_TABLA = 'EQUIPOS')  THEN              
              SET CURVACIO = 0;	       
	            OPEN Cur_Mantenimiento2;
			        FETCH Cur_Mantenimiento2 INTO v_DatoExiste;
			        CLOSE Cur_Mantenimiento2;
              IF (v_DatoExiste IS NOT NULL) THEN
                  SET p_RESULTADO = 1;
              ELSE    
                   DELETE FROM EQUIPOS WHERE CODIGOEQUIPO = p_CONDICION;
              END IF;		 
      ELSEIF (p_TABLA = 'LISTAVALORES' ) THEN
              SET CURVACIO = 0;
	            OPEN Cur_Equipos1;
			        FETCH Cur_Equipos1 INTO v_DatoExiste;
			        CLOSE Cur_Equipos1;
              IF (v_DatoExiste IS NOT NULL) THEN
                  SET p_RESULTADO = 1;		     	 
              ELSE
                  OPEN Cur_Equipos2;
                  FETCH Cur_Equipos2 INTO v_DatoExiste;
                  CLOSE Cur_Equipos2;
                  IF (v_DatoExiste IS NOT NULL) THEN
                      SET p_RESULTADO = 1;		     	 
                  ELSE
                       DELETE FROM LISTAVALORES WHERE CODIGO = p_CONDICION;
              	  END IF;	 
			 END IF;		 
      ELSEIF (p_TABLA = 'MANTENIMIENTO') THEN
             INSERT INTO RESPALDO SELECT * FROM MANTENIMIENTO WHERE CODIGOEQUIPO = p_CONDICION;
             DELETE FROM MANTENIMIENTO WHERE CODIGOEQUIPO = p_CONDICION;             
      END IF;

      
      COMMIT;      
      
END;

CREATE PROCEDURE controlmantenimientodb.`spr_IUEquipos`(
IN  p_CODIGOEQUIPO          INT(4),
IN  p_NOMBREEQUIPO          VARCHAR(50),
IN  p_CODIGOMARCA           INT(4),
IN  p_SERIE                 VARCHAR(20),
IN  p_CODIGOLINEA           INT(4),
IN  p_LUBRICACION           INT(1),
IN  p_USUARIOCONECTADO      decimal(10,0),
OUT p_RESULTADO             INT(1))
BEGIN
     DECLARE v_SerieNueva  VARCHAR(20) DEFAULT NULL;
     DECLARE v_SerieActual VARCHAR(20) DEFAULT NULL;
     DECLARE CURVACIO	 INT DEFAULT 0;
      
     DECLARE Cur_Serie CURSOR FOR
     SELECT SERIE
     FROM   EQUIPOS
     WHERE  SERIE  = p_SERIE;
 
     DECLARE EXIT HANDLER FOR SQLEXCEPTION SET p_RESULTADO = 2;
     DECLARE CONTINUE HANDLER FOR NOT FOUND SET CURVACIO = 1;
 
     SET p_RESULTADO = 0;
     
     -- Validar que no exista la serie que envían como parámetro
     SET CURVACIO = 0; 
		 OPEN Cur_Serie;
		 FETCH Cur_Serie INTO v_SerieNueva;
		 CLOSE Cur_Serie;
        
      IF (p_CODIGOEQUIPO = 0) THEN
          IF (v_SerieNueva IS NOT NULL) THEN
		          SET p_RESULTADO = 1;
	        ELSE		
              INSERT INTO EQUIPOS(
                              NOMBREEQUIPO, 
                              CODIGOMARCA,  
                              SERIE, 
                              CODIGOLINEA,  
                              LUBRICACION, 
                              INGRESADOPOR, 
                              MODIFICADOPOR,
                              FECHAINGRESO,
                              FECHAMODIFICACION)
                              
                  VALUES(
                              p_NOMBREEQUIPO, 
                              p_CODIGOMARCA, 
                              p_SERIE, 
                              p_CODIGOLINEA, 
                              p_LUBRICACION, 
                              p_USUARIOCONECTADO, 
                              p_USUARIOCONECTADO,
                              now(),
                              now());
                              
                                                  
                              COMMIT;
          END IF;                    
      ELSE
          SELECT SERIE INTO v_SerieActual FROM EQUIPOS WHERE CODIGOEQUIPO = p_CODIGOEQUIPO;
			    IF ((v_SerieNueva IS NOT NULL) AND (v_SerieActual <> p_SERIE)) THEN
			         SET p_RESULTADO = 1;	  
	        ELSE		 
		
               UPDATE EQUIPOS SET             
               NOMBREEQUIPO       = p_NOMBREEQUIPO,  
               CODIGOMARCA        = p_CODIGOMARCA, 
               SERIE              = p_SERIE, 
               CODIGOLINEA        = p_CODIGOLINEA, 
               LUBRICACION        = p_LUBRICACION,
               MODIFICADOPOR      = p_USUARIOCONECTADO,
               FECHAMODIFICACION  = NOW()
               WHERE CODIGOEQUIPO = p_CODIGOEQUIPO;
               
               COMMIT;
          END IF;                    
    END IF;               
                    
END;

CREATE PROCEDURE controlmantenimientodb.`spr_IUListaValores`(
IN p_CODIGO             INT(4),
IN p_NOMBRE             VARCHAR(50),
IN p_DESCRIPCION        VARCHAR(255),
IN p_TIPO               VARCHAR(50),
IN p_USUARIOCONECTADO   decimal(10,0),
OUT p_RESULTADO         INT(1))
BEGIN
      DECLARE v_NombreNuevo  VARCHAR(50) DEFAULT NULL;
      DECLARE v_NombreActual VARCHAR(50) DEFAULT NULL;
      DECLARE CURVACIO	 INT DEFAULT 0;
      
      DECLARE Cur_Nombre CURSOR FOR
      SELECT NOMBRE
      FROM   LISTAVALORES
      WHERE  NOMBRE  = p_NOMBRE;
      
      DECLARE EXIT HANDLER FOR SQLEXCEPTION SET p_RESULTADO = 2;
      DECLARE CONTINUE HANDLER FOR NOT FOUND SET CURVACIO = 1;
 
      SET p_RESULTADO = 0;
      
      -- Validar que no exista el nombre que envían como parámetro
      SET CURVACIO = 0;
      OPEN Cur_Nombre;
      FETCH Cur_Nombre INTO v_NombreNuevo;
      CLOSE Cur_Nombre;
          
      IF (p_CODIGO = 0) THEN
          IF (v_NombreNuevo IS NOT NULL) THEN
		          SET p_RESULTADO = 1;      
	        ELSE		       
              INSERT INTO LISTAVALORES(                       
                          NOMBRE, 
                          DESCRIPCION, 
                          TIPO, 
                          INGRESADOPOR, 
                          MODIFICADOPOR,
                          FECHAINGRESO,
                          FECHAMODIFICACION)
              VALUES(
                          p_NOMBRE, 
                          p_DESCRIPCION, 
                          p_TIPO, 
                          p_USUARIOCONECTADO, 
                          p_USUARIOCONECTADO,
                          NOW(),
                          NOW());
                          
                          COMMIT;
          END IF;                
      ELSE
           SELECT NOMBRE INTO v_NombreActual FROM LISTAVALORES WHERE CODIGO = p_CODIGO;
           IF ((v_NombreNuevo IS NOT NULL) AND (v_NombreActual <> p_NOMBRE)) THEN
			         SET p_RESULTADO = 1;	  
	         ELSE		 
           
              UPDATE LISTAVALORES SET             
              NOMBRE            = p_NOMBRE,  
              DESCRIPCION       = p_DESCRIPCION, 
              MODIFICADOPOR     = p_USUARIOCONECTADO,
              FECHAMODIFICACION = NOW()
              WHERE CODIGO      = p_CODIGO;
          
              COMMIT;
           END IF;   
           
        END IF;
             
END;

DROP PROCEDURE IF EXISTS controlmantenimientodb.spr_IUMantenimiento;
CREATE PROCEDURE controlmantenimientodb.`spr_IUMantenimiento`(
IN  p_ACCION                    CHAR(1),
IN  p_CODIGOEQUIPO              INT(4),
IN  p_DOCUMENTO                 decimal(10,0),
IN  p_FECHA                     DATE,
IN  p_OBSERVACIONES             VARCHAR(255),
IN  p_USUARIOCONECTADO          decimal(10,0),
OUT p_RESULTADO                 INT(1))
BEGIN
     
    DECLARE v_OperarioActual DECIMAL (10,0) DEFAULT 0;
    DECLARE v_OperarioNuevo  DECIMAL (10,0) DEFAULT 0;
    DECLARE v_FechaActual    DATE DEFAULT NULL;
    DECLARE v_FechaNueva     DATE DEFAULT NULL;
    DECLARE CURVACIO	       INT DEFAULT 0;

    DECLARE Cur_Mantenimiento CURSOR FOR
    SELECT DOCUMENTO,FECHA
    FROM MANTENIMIENTO 
    WHERE DOCUMENTO = p_DOCUMENTO 
    AND FECHA = p_FECHA;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION SET p_RESULTADO = 2;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET CURVACIO = 1;
  
    SET p_RESULTADO = 0;
    
    -- Validar que no exista el nombre que envían como parámetro
	  SET CURVACIO = 0;
    OPEN Cur_Mantenimiento;
	  FETCH Cur_Mantenimiento INTO v_OperarioNuevo, v_FechaNueva;
	  CLOSE Cur_Mantenimiento;
    
      IF (p_ACCION = 'I') THEN
          IF ((v_OperarioNuevo <> 0)  AND (v_FechaNueva IS NOT NULL)) THEN 
		          SET p_RESULTADO = 1;
		      ELSE  
                INSERT INTO MANTENIMIENTO(
                              CODIGOEQUIPO, 
                              DOCUMENTO, 
                              FECHA, 
                              OBSERVACIONES, 
                              INGRESADOPOR, 
                              MODIFICADOPOR,
                              FECHAINGRESO,
                              FECHAMODIFICACION)
                  VALUES(
                              p_CODIGOEQUIPO, 
                              p_DOCUMENTO, 
                              p_FECHA, 
                              p_OBSERVACIONES, 
                              p_USUARIOCONECTADO,
                              p_USUARIOCONECTADO,
                              NOW(),
                              NOW());
                              
                              COMMIT;
          END IF;                     
      ELSE
            IF (v_OperarioNuevo <> 0) THEN
               SELECT DOCUMENTO, FECHA  INTO v_OperarioActual, v_FechaActual FROM MANTENIMIENTO WHERE CODIGOEQUIPO = p_CODIGOEQUIPO;
               IF (v_OperarioActual <> p_DOCUMENTO) THEN
                  SET p_RESULTADO = 1;
               ELSEIF ((v_OperarioActual = p_DOCUMENTO) AND (v_FechaActual <> p_FECHA)) THEN
                      SET p_RESULTADO = 1; /*Modificaron fecha pero con el mismo Operario*/
               ELSE
                    UPDATE MANTENIMIENTO SET   
                    DOCUMENTO          = p_DOCUMENTO,
                    FECHA              = p_FECHA,
                    OBSERVACIONES      = p_OBSERVACIONES,
                    FECHAMODIFICACION  = NOW()
                    WHERE CODIGOEQUIPO = p_CODIGOEQUIPO;   
                      
                    COMMIT;         
               END IF;     
            ELSE
                 UPDATE MANTENIMIENTO SET   
                 DOCUMENTO          = p_DOCUMENTO,
                 FECHA              = p_FECHA,
                 OBSERVACIONES      = p_OBSERVACIONES,
                 FECHAMODIFICACION  = NOW()
                 WHERE CODIGOEQUIPO = p_CODIGOEQUIPO;   
                    
                 COMMIT;
         
            END IF; 
               
                               
      END IF;               
END;


CREATE PROCEDURE controlmantenimientodb.`spr_IUOperarios`(
IN p_ACCION                   CHAR(1),
IN p_DOCUMENTO                decimal(10,0),
IN p_NOMBRES                  VARCHAR(25),
IN p_APELLIDOS                VARCHAR(25),
IN p_TELEFONO                 decimal(10,0),
IN p_CORREO                   VARCHAR(50),
IN p_CLAVE                    VARCHAR(20),
IN p_PERFIL                   INT,
IN p_FOTO                     VARCHAR(50),
IN p_USUARIOCONECTADO         decimal(10,0),
OUT p_RESULTADO               INT)
BEGIN
      DECLARE v_Documento decimal(10,0) DEFAULT NULL;
      DECLARE CURVACIO	 INT DEFAULT 0;
      
      DECLARE Cur_Documento CURSOR FOR
      SELECT DOCUMENTO
      FROM   OPERARIOS
      WHERE  DOCUMENTO = v_Documento;
      
      DECLARE EXIT HANDLER FOR SQLEXCEPTION SET p_RESULTADO = 2;
      DECLARE CONTINUE HANDLER FOR NOT FOUND SET CURVACIO = 1;
            
      SET p_RESULTADO = 0;
      
      IF (p_ACCION = 'I') THEN
          -- Validar que no exista el documento que envían como parámetro
          SET CURVACIO = 0;
          OPEN Cur_Documento;
          FETCH Cur_Documento INTO v_Documento;
          CLOSE Cur_Documento;
          
          IF (v_Documento IS NOT NULL) THEN
              SET p_RESULTADO = 1; 
          ELSE   
              INSERT INTO OPERARIOS(
                              DOCUMENTO, 
                              NOMBRES, 
                              APELLIDOS, 
                              TELEFONO, 
                              CORREO, 
                              CLAVE,
                              PERFIL,
                              FOTO, 
                              INGRESADOPOR, 
                              MODIFICADOPOR,
                              FECHAINGRESO,
                              FECHAMODIFICACION)
                  VALUES(
                              p_DOCUMENTO, 
                              p_NOMBRES, 
                              p_APELLIDOS, 
                              p_TELEFONO, 
                              p_CORREO, 
                              p_CLAVE,
                              p_PERFIL,
                              p_FOTO, 
                              p_USUARIOCONECTADO,
                              p_USUARIOCONECTADO,
                              now(),
                              now());
                              
                               COMMIT;  
          END IF;                   
      ELSE
               UPDATE OPERARIOS SET             
               NOMBRES            = p_NOMBRES,  
               APELLIDOS          = p_APELLIDOS, 
               TELEFONO           = p_TELEFONO, 
               CORREO             = p_CORREO, 
               CLAVE              = p_CLAVE,
               PERFIL             = p_PERFIL,
               FOTO               = p_FOTO,
               MODIFICADOPOR      = p_USUARIOCONECTADO,
               FECHAMODIFICACION  = now()
               WHERE DOCUMENTO    = p_DOCUMENTO; 
               
               COMMIT;
               
      END IF;      
END;

CREATE PROCEDURE controlmantenimientodb.`spr_UCambioClave`(
 IN  p_DOCUMENTO                decimal(10,0),
 IN  p_CLAVE                    VARCHAR(20),   
 OUT p_RESULTADO                INT(1))
BEGIN
      DECLARE EXIT HANDLER FOR SQLEXCEPTION SET p_RESULTADO = 1;
      
      SET p_RESULTADO = 0;
     
      UPDATE OPERARIOS SET             
      CLAVE                = p_CLAVE,
      MODIFICADOPOR        = p_DOCUMENTO,
      FECHAMODIFICACION    = NOW()
      WHERE DOCUMENTO   = p_DOCUMENTO;
      
      COMMIT;
        
END;

CREATE PROCEDURE controlmantenimientodb.`spr_CCargarListado`(
IN p_TABLA      VARCHAR(50),
IN p_CONDICION  VARCHAR(50))
BEGIN
      IF (p_TABLA = 'OPERARIOS') THEN
          IF (p_CONDICION <> '') THEN
               SELECT DOCUMENTO AS CODIGO, CONCAT(NOMBRES, " ", APELLIDOS, " - Correo: ", CORREO) AS DESCRIPCION FROM OPERARIOS WHERE DOCUMENTO = p_CONDICION;  
          ELSE
              SELECT DOCUMENTO AS CODIGO, CONCAT(NOMBRES, " ", APELLIDOS, " - Correo: ", CORREO) AS DESCRIPCION FROM OPERARIOS;  
          END IF;   
       ELSEIF (p_TABLA = 'EQUIPOS') THEN
                IF (p_CONDICION <> '') THEN                    
				            SELECT CODIGOEQUIPO AS CODIGO, CONCAT(NOMBREEQUIPO, " ",   SERIE) AS DESCRIPCION FROM EQUIPOS WHERE CODIGOEQUIPO = p_CONDICION;
                ELSE
                    SELECT CODIGOEQUIPO AS CODIGO, CONCAT(NOMBREEQUIPO, " ",   SERIE) AS DESCRIPCION FROM EQUIPOS;
                END IF;         
       ELSEIF (p_TABLA = 'MARCAS') THEN
                IF (p_CONDICION <> '') THEN                    
                    SELECT CODIGO, CONCAT(NOMBRE, " ", DESCRIPCION) AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NOT NULL 
                    AND TIPO = 'MARCAS' AND CODIGO = p_CONDICION
                    UNION ALL (SELECT CODIGO, NOMBRE AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NULL AND TIPO = 'MARCAS'
                    AND CODIGO = p_CONDICION);
                ELSE
                    SELECT CODIGO, CONCAT(NOMBRE, " ", DESCRIPCION) AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NOT NULL 
                    AND TIPO = 'MARCAS'
                    UNION ALL (SELECT CODIGO, NOMBRE AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NULL AND TIPO = 'MARCAS');
                END IF;          
       ELSEIF (p_TABLA = 'LINEAS') THEN
                IF (p_CONDICION <> '') THEN                 
                    SELECT CODIGO, CONCAT(NOMBRE, " ", DESCRIPCION) AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NOT NULL 
                    AND TIPO = 'LINEAS' AND CODIGO = p_CONDICION
                    UNION ALL (SELECT CODIGO, NOMBRE AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NULL AND TIPO = 'LINEAS'
                    AND CODIGO = p_CONDICION);
                ELSE
                    SELECT CODIGO, CONCAT(NOMBRE, " ", DESCRIPCION) AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NOT NULL
                    AND TIPO = 'LINEAS'
                    UNION ALL (SELECT CODIGO, NOMBRE AS DESCRIPCION FROM LISTAVALORES WHERE DESCRIPCION IS NULL AND TIPO = 'LINEAS');
                END IF;   	
       ELSEIF (p_TABLA = 'MANTENIMIENTO') THEN
                IF (p_CONDICION <> '') THEN
                    SELECT M.CODIGOEQUIPO AS CODIGO, CONCAT("Operario: ", M.DOCUMENTO, " ",   NOMBRES, " ",  APELLIDOS, " - Equipo: ", NOMBREEQUIPO, " - Serie: ", SERIE) AS DESCRIPCION 
                    FROM MANTENIMIENTO M
                    INNER JOIN EQUIPOS E ON E.CODIGOEQUIPO = M.CODIGOEQUIPO
                    INNER JOIN OPERARIOS O ON O.DOCUMENTO = M.DOCUMENTO
                   WHERE M.CODIGOEQUIPO = p_CONDICION;
                ELSE
                    SELECT M.CODIGOEQUIPO AS CODIGO, CONCAT("Operario: ", M.DOCUMENTO, " ",   NOMBRES, " ",  APELLIDOS, " - Equipo: ", NOMBREEQUIPO, " - Serie: ", SERIE) AS DESCRIPCION 
                    FROM MANTENIMIENTO M
                    INNER JOIN EQUIPOS E ON E.CODIGOEQUIPO = M.CODIGOEQUIPO
                    INNER JOIN OPERARIOS O ON O.DOCUMENTO = M.DOCUMENTO;
                END IF;                        
      END IF;     
END;


 INSERT INTO OPERARIOS(
                              DOCUMENTO, 
                              NOMBRES, 
                              APELLIDOS, 
                              TELEFONO, 
                              CORREO, 
                              CLAVE,
                              PERFIL,
                              FOTO, 
                              INGRESADOPOR, 
                              MODIFICADOPOR,
                              FECHAINGRESO,
                              FECHAMODIFICACION)
                  VALUES(
                              123456, 
                              'Admin', 
                              'Admin', 
                              1234567, 
                              'correo@yahoo.es', 
                              'laclave',
                              1,
                              NULL, 
                              123456,
                              123456,
                              now(),
                              now());
                              
                               COMMIT;  